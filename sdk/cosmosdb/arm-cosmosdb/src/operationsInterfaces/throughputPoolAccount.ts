/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ThroughputPoolAccountGetOptionalParams,
  ThroughputPoolAccountGetResponse,
  ThroughputPoolAccountResource,
  ThroughputPoolAccountCreateOptionalParams,
  ThroughputPoolAccountCreateResponse,
  ThroughputPoolAccountDeleteOptionalParams,
  ThroughputPoolAccountDeleteResponse,
} from "../models";

/** Interface representing a ThroughputPoolAccount. */
export interface ThroughputPoolAccount {
  /**
   * Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param throughputPoolAccountName Cosmos DB global database account in a Throughput Pool
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    throughputPoolName: string,
    throughputPoolAccountName: string,
    options?: ThroughputPoolAccountGetOptionalParams,
  ): Promise<ThroughputPoolAccountGetResponse>;
  /**
   * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when
   * performing updates on an account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param throughputPoolAccountName Cosmos DB global database account in a Throughput Pool
   * @param body The parameters to provide for the current ThroughputPoolAccount.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    throughputPoolName: string,
    throughputPoolAccountName: string,
    body: ThroughputPoolAccountResource,
    options?: ThroughputPoolAccountCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ThroughputPoolAccountCreateResponse>,
      ThroughputPoolAccountCreateResponse
    >
  >;
  /**
   * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when
   * performing updates on an account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param throughputPoolAccountName Cosmos DB global database account in a Throughput Pool
   * @param body The parameters to provide for the current ThroughputPoolAccount.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    throughputPoolName: string,
    throughputPoolAccountName: string,
    body: ThroughputPoolAccountResource,
    options?: ThroughputPoolAccountCreateOptionalParams,
  ): Promise<ThroughputPoolAccountCreateResponse>;
  /**
   * Removes an existing Azure Cosmos DB database account from a throughput pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param throughputPoolAccountName Cosmos DB global database account in a Throughput Pool
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    throughputPoolName: string,
    throughputPoolAccountName: string,
    options?: ThroughputPoolAccountDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ThroughputPoolAccountDeleteResponse>,
      ThroughputPoolAccountDeleteResponse
    >
  >;
  /**
   * Removes an existing Azure Cosmos DB database account from a throughput pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param throughputPoolName Cosmos DB Throughput Pool name.
   * @param throughputPoolAccountName Cosmos DB global database account in a Throughput Pool
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    throughputPoolName: string,
    throughputPoolAccountName: string,
    options?: ThroughputPoolAccountDeleteOptionalParams,
  ): Promise<ThroughputPoolAccountDeleteResponse>;
}
